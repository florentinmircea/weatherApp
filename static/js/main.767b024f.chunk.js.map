{"version":3,"sources":["components/title/Title.js","components/day/DayComponent.js","api/api.js","components/dialog/InfoDialog.js","components/forecast/Forecast.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","justifyContent","alignItems","backgroundColor","marginLeft","marginRight","boxShadow","content","paddingTop","paddingBottom","breakpoints","down","up","Title","classes","useTheme","isSmallScreen","useMediaQuery","className","Typography","variant","justifyItems","padding","border","gridGap","cursor","DayComponent","props","Card","onClick","data","time","substr","icon","size","color","temperatureMin","temperatureMax","summary","getWeather","latitude","longitude","a","options","method","url","params","lat","lng","filter","headers","axios","request","then","response","catch","error","Error","width","title","paddingLeft","item","gridTemplateColumns","InfoDialog","onClose","selectedValue","open","Dialog","undefined","sunriseTime","sunsetTime","precipProbability","precipType","humidity","windSpeed","toFixed","cloudCover","uvIndex","pressure","ozone","marginTop","location","days","Forecast","useState","city","setCity","forecast","actualData","setActualData","setOpen","value","setValue","useEffect","load","navigator","geolocation","getCurrentPosition","position","coords","toString","getWeatherData","length","i","push","aux","readableDate","Date","parseInt","readableSunrise","hours","getHours","minutes","getMinutes","readableSunset","Math","round","daysElements","map","index","val","errorDiv","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.767b024f.chunk.js","sourcesContent":["import { makeStyles, Typography, useMediaQuery } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nconst Title = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const isSmallScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  return (\n    <div className={classes.root}>\n      <div className={classes.content}>\n        <Typography variant={isSmallScreen === true ? \"h5\" : \"h1\"}>\n          5-Day Forecast\n        </Typography>\n      </div>\n    </div>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"grid\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#e9ecef\",\n    marginLeft: \"10%\",\n    marginRight: \"10%\",\n    boxShadow: \"-3px 11px 15px -5px rgba(0,0,0,0)\",\n  },\n  content: {\n    paddingTop: \"100px\",\n    paddingBottom: \"100px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      paddingTop: \"25px\",\n      paddingBottom: \"25px\",\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      paddingTop: \"50px\",\n      paddingBottom: \"50px\",\n    },\n  },\n}));\n\nexport default Title;\n","import { makeStyles, Typography, useMediaQuery } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { WiRaindrops, WiDaySunny, WiDayCloudyHigh } from \"weather-icons-react\";\nimport Card from \"@material-ui/core/Card\";\n\nconst DayComponent = (props) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const isSmallScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  return (\n    <Card className={classes.root} onClick={props.onClick}>\n      <div>\n        <Typography variant={isSmallScreen === true ? \"h5\" : \"h4\"}>\n          {props.data.time.substr(0, 3)}\n        </Typography>\n      </div>\n      <div>\n        <Typography variant={isSmallScreen === true ? \"h6\" : \"h6\"}>\n          {props.data.time.substr(3, 10)}\n        </Typography>\n      </div>\n      <div>\n        {props.data.icon === \"rain\" ? (\n          <WiRaindrops size={100} color=\"#000\" />\n        ) : null}\n        {props.data.icon === \"clear-day\" ? (\n          <WiDaySunny size={100} color=\"#000\" />\n        ) : null}\n        {props.data.icon === \"partly-cloudy-day\" ? (\n          <WiDayCloudyHigh size={100} color=\"#000\" />\n        ) : null}\n      </div>\n      <div>\n        <Typography variant={isSmallScreen === true ? \"h6\" : \"h6\"}>\n          {\"Min:\" +\n            props.data.temperatureMin +\n            \"°C Max:\" +\n            props.data.temperatureMax +\n            \"°C\"}\n        </Typography>\n      </div>\n      <div>{props.data.summary}</div>\n    </Card>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"grid\",\n    justifyItems: \"center\",\n    alignItems: \"center\",\n    padding: \"5px 5px 5px 5px\",\n    border: \"2px solid #ededed\",\n    gridGap: \"5px\",\n    cursor: \"pointer\",\n  },\n}));\n\nexport default DayComponent;\n","import axios from \"axios\";\n\nexport const getWeather = async (latitude, longitude) => {\n  const options = {\n    method: \"GET\",\n    url: \"https://api.ambeedata.com/weather/forecast/by-lat-lng\",\n    params: {\n      lat: latitude,\n      lng: longitude,\n      filter: \"daily\",\n    },\n    headers: {\n      \"x-api-key\":\n        \"947b9b73582363d9338944201e557ed162de714f21693bb847720566ce19d0ae\",\n      \"Content-type\": \"application/json\",\n    },\n  };\n  return axios\n    .request(options)\n    .then(function (response) {\n      return response.data;\n    })\n    .catch(function (error) {\n      throw new Error(error);\n    });\n};\n","import { makeStyles } from \"@material-ui/core\";\nimport {\n  WiSunrise,\n  WiSunset,\n  WiRaindrop,\n  WiStrongWind,\n  WiHumidity,\n} from \"weather-icons-react\";\nimport React from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nconst InfoDialog = (props) => {\n  const classes = useStyles();\n  const { onClose, selectedValue, open } = props;\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  return (\n    <Dialog\n      onClose={handleClose}\n      aria-labelledby=\"simple-dialog-title\"\n      open={open}\n    >\n      <div className={classes.root}>\n        <div className={classes.title}>\n          Info {props.data !== undefined ? \" \" + props.data.time : null}\n        </div>\n        <div className={classes.content}>\n          <div className={classes.item}>\n            Sunrise\n            <div className={classes.icon}>\n              <WiSunrise size={30} color=\"#000\" />\n            </div>\n            {props.data !== undefined ? props.data.sunriseTime : null}\n          </div>\n          <div className={classes.item}>\n            Sunset\n            <div className={classes.icon}>\n              <WiSunset size={30} color=\"#000\" />\n            </div>\n            {props.data !== undefined ? \" \" + props.data.sunsetTime : null}\n          </div>\n          <div className={classes.item}>\n            Precipitation probability\n            <div className={classes.icon}>\n              <WiRaindrop size={30} color=\"#000\" />\n            </div>\n            {props.data !== undefined\n              ? \" \" + props.data.precipProbability * 100 + \"%\"\n              : null}\n          </div>\n          <div>\n            Precipitation type\n            {props.data !== undefined ? \" \" + props.data.precipType : null}\n          </div>\n          <div>\n            Min\n            {props.data !== undefined\n              ? \" \" + props.data.temperatureMin + \"°C\"\n              : null}\n          </div>\n          <div>\n            Max\n            {props.data !== undefined\n              ? \" \" + props.data.temperatureMax + \"°C\"\n              : null}\n          </div>\n          <div className={classes.item}>\n            Humidity\n            <div className={classes.icon}>\n              <WiHumidity size={30} color=\"#000\" />\n            </div>\n            {props.data !== undefined\n              ? \" \" + props.data.humidity * 100 + \"%\"\n              : null}\n          </div>\n          <div className={classes.item}>\n            Windspeed\n            <div className={classes.icon}>\n              <WiStrongWind size={30} color=\"#000\" />\n            </div>\n            {props.data !== undefined\n              ? \" \" + (props.data.windSpeed * 1.61).toFixed(1) + \"KM/H\"\n              : null}\n          </div>\n          <div>\n            Cloud cover\n            {props.data !== undefined\n              ? \" \" + props.data.cloudCover * 100 + \"%\"\n              : null}\n          </div>\n          <div>\n            UV Index\n            {props.data !== undefined ? \" \" + props.data.uvIndex : null}\n          </div>\n          <div>\n            Pressure\n            {props.data !== undefined\n              ? \" \" +\n                (props.data.pressure * 0.75006375541921).toFixed(2) +\n                \" mmHg\"\n              : null}\n          </div>\n          <div>\n            Ozone\n            {props.data !== undefined\n              ? \" \" + props.data.ozone + \" Dobson\"\n              : null}\n          </div>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"grid\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"500px\",\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"300px\",\n    },\n  },\n  title: {\n    display: \"grid\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingTop: \"5%\",\n    paddingBottom: \"5%\",\n  },\n  content: {\n    display: \"grid\",\n    paddingLeft: \"5%\",\n    gridGap: \"5px\",\n  },\n  item: {\n    display: \"grid\",\n    gridTemplateColumns: \"0.1fr 0.1fr 0.1fr\",\n    alignItems: \"center\",\n  },\n  icon: {\n    display: \"grid\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n}));\n\nexport default InfoDialog;\n","import { makeStyles, Typography, useMediaQuery } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { useEffect, useState } from \"react\";\nimport DayComponent from \"../day/DayComponent\";\nimport { getWeather } from \"../../api/api\";\nimport { res } from \"../../api/mockdata\";\nimport InfoDialog from \"../dialog/InfoDialog\";\n\nconst Forecast = () => {\n  const [city, setCity] = useState(\"\");\n  const classes = useStyles();\n  const theme = useTheme();\n  const isSmallScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const [forecast, setForecast] = useState([]);\n  const [actualData, setActualData] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [value, setValue] = useState(0);\n\n  const handleClickOpen = (val) => {\n    setOpen(true);\n    setValue(val);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    load();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const load = () => {\n    // setForecast([]);\n    if (\"geolocation\" in navigator) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        setCity(\n          \"Coordinates: \" +\n            position.coords.latitude.toFixed(2).toString() +\n            \" , \" +\n            position.coords.longitude.toFixed(2).toString()\n        );\n        getWeatherData(\n          position.coords.latitude.toString(),\n          position.coords.longitude.toString()\n        );\n      });\n    }\n  };\n\n  const getWeatherData = async (latitude, longitude) => {\n    const response = await getWeather(latitude, longitude);\n    // console.log(response);\n    let aux;\n    forecast.length = 0;\n    for (let i = 0; i < 5; i++) {\n      forecast.push(response.data.forecast[i]);\n    }\n    for (let i = 0; i < 5; i++) {\n      aux = \"\";\n      aux = forecast[i];\n      var readableDate = new Date(parseInt(aux.time) * 1000);\n      aux.time = readableDate.toString().substr(0, 10);\n      var readableSunrise = new Date(parseInt(aux.sunriseTime) * 1000);\n      var hours = readableSunrise.getHours();\n      var minutes = \"0\" + readableSunrise.getMinutes();\n      aux.sunriseTime = hours + \":\" + minutes.substr(-2);\n      var readableSunset = new Date(parseInt(aux.sunsetTime) * 1000);\n      var hours = readableSunset.getHours();\n      var minutes = \"0\" + readableSunset.getMinutes();\n      aux.sunsetTime = hours + \":\" + minutes.substr(-2);\n      aux.temperatureMin =\n        Math.round((aux.temperatureMin - 32) * 0.5556 * 10) / 10;\n      aux.temperatureMax =\n        Math.round((aux.temperatureMax - 32) * 0.5556 * 10) / 10;\n      forecast[i] = aux;\n    }\n    setActualData(forecast);\n    // console.log(forecast);\n  };\n\n  const daysElements = actualData?.map((item, index) => (\n    <DayComponent\n      data={item}\n      key={index}\n      onClick={() => handleClickOpen(index)}\n    />\n  ));\n\n  const errorDiv = (\n    <div>\n      <Typography variant={isSmallScreen === true ? \"h5\" : \"h4\"}>\n        {\n          \"If you are seeing this, your browser does not have access to your location.\"\n        }\n      </Typography>\n      <br />\n      <Typography variant={isSmallScreen === true ? \"h5\" : \"h4\"}>\n        {\n          \"If you are using iOS this can be solved by going into Settings > Privacy > Location Services > Safari > Ask next time.\"\n        }\n      </Typography>\n      <br />\n      <Typography variant={isSmallScreen === true ? \"h5\" : \"h4\"}>\n        {\n          \"If you are using Android this can be solved by going into Settings > Apps > Browser App > Permissions > Location > Ask everytime.\"\n        }\n      </Typography>\n    </div>\n  );\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.location}>\n        <Typography variant={isSmallScreen === true ? \"h6\" : \"h2\"}>\n          {city}\n        </Typography>\n      </div>\n      <div className={classes.days}>\n        {daysElements.length !== 0 ? daysElements : errorDiv}\n        <InfoDialog\n          data={actualData[value]}\n          open={open}\n          onClose={handleClose}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"grid\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginLeft: \"15%\",\n    marginRight: \"15%\",\n    marginTop: \"100px\",\n    boxShadow: \"-3px 11px 15px -5px rgba(0,0,0,0)\",\n    [theme.breakpoints.up(\"md\")]: {\n      marginTop: \"50px\",\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      marginTop: \"25px\",\n    },\n  },\n  location: {\n    display: \"grid\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  days: {\n    display: \"grid\",\n    gridTemplateColumns: \"auto auto auto auto auto\",\n    [theme.breakpoints.up(\"md\")]: {\n      marginTop: \"50px\",\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      marginTop: \"25px\",\n      gridTemplateColumns: \"auto\",\n    },\n    gridGap: \"20px\",\n  },\n}));\n\nexport default Forecast;\n","import \"./App.css\";\nimport Title from \"./components/title/Title\";\nimport Forecast from \"./components/forecast/Forecast\";\n\nfunction App() {\n  return (\n    <div>\n      <Title />\n      <Forecast />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}